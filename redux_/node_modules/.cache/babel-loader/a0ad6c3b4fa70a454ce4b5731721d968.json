{"ast":null,"code":"var _jsxFileName = \"D:\\\\my\\\\my_web_pro\\\\my_react\\\\redux_\\\\src\\\\containers\\\\Person\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addPerson } from '../../redux/actions/person';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Person extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addP = () => {\n      const {\n        nameInpt,\n        ageInpt\n      } = this;\n      const id = nanoid();\n      console.log(nameInpt.value);\n      this.props.add({\n        id,\n        name: nameInpt.value,\n        age: ageInpt.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      person,\n      count\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [person.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: c => this.nameInpt = c\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: c => this.ageInpt = c\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addP,\n            children: \"\\u6DFB\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"COUNT: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n} // 多个reducer通过combine连接成的对象, 都在state中存着, 连接时的key就是这里取值是state的key\n\n\nconst mapStateToProps = state => ({\n  person: state.person,\n  count: state.count\n});\n\nconst mapDispatchToProps = {\n  add: addPerson\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Person);","map":{"version":3,"sources":["D:/my/my_web_pro/my_react/redux_/src/containers/Person/index.jsx"],"names":["React","Component","connect","addPerson","nanoid","Person","addP","nameInpt","ageInpt","id","console","log","value","props","add","name","age","render","person","count","map","item","c","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC7BK,IAD6B,GACtB,MAAM;AACX,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAwB,IAA9B;AACA,YAAMC,EAAE,GAAGL,MAAM,EAAjB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,KAArB;AACA,WAAKC,KAAL,CAAWC,GAAX,CAAe;AAAEL,QAAAA,EAAF;AAAMM,QAAAA,IAAI,EAAER,QAAQ,CAACK,KAArB;AAA4BI,QAAAA,GAAG,EAAER,OAAO,CAACI;AAAzC,OAAf;AACD,KAN4B;AAAA;;AAO7BK,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAoB,KAAKN,KAA/B;AACA,wBACE;AAAA,iBAEIK,MAAM,CAACE,GAAP,CAAWC,IAAI,IAAI;AACjB,4BACE;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACN;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKM,IAAI,CAACL;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,GAAG,EAAEM,CAAC,IAAI,KAAKf,QAAL,GAAgBe;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,GAAG,EAAEA,CAAC,IAAI,KAAKd,OAAL,GAAec;AAA5C;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,OAAO,EAAE,KAAKhB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA,WAAUe,IAAI,CAACZ,EAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVD,CAFJ,eAeE;AAAA,8BAAYU,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA5B4B,C,CA8B/B;;;AACA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAAEN,EAAAA,MAAM,EAAEM,KAAK,CAACN,MAAhB;AAAwBC,EAAAA,KAAK,EAAEK,KAAK,CAACL;AAArC,CAAL,CAA7B;;AACA,MAAMM,kBAAkB,GAAG;AACzBX,EAAAA,GAAG,EAAEX;AADoB,CAA3B;AAGA,eAAeD,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addPerson } from '../../redux/actions/person'\r\nimport { nanoid } from 'nanoid'\r\n\r\nclass Person extends Component {\r\n  addP = () => {\r\n    const { nameInpt, ageInpt } = this\r\n    const id = nanoid()\r\n    console.log(nameInpt.value)\r\n    this.props.add({ id, name: nameInpt.value, age: ageInpt.value })\r\n  }\r\n  render () {\r\n    const { person, count } = this.props\r\n    return (\r\n      <div>\r\n        {\r\n          person.map(item => {\r\n            return (\r\n              <div key={item.id}>\r\n                <h3>{item.name}</h3>\r\n                <h3>{item.age}</h3>\r\n                <input type=\"text\" ref={c => this.nameInpt = c} />\r\n                <input type=\"text\" ref={c => this.ageInpt = c} />\r\n                <button onClick={this.addP}>添加</button>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n\r\n        <h2>COUNT: {count}</h2>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n// 多个reducer通过combine连接成的对象, 都在state中存着, 连接时的key就是这里取值是state的key\r\nconst mapStateToProps = state => ({ person: state.person, count: state.count })\r\nconst mapDispatchToProps = {\r\n  add: addPerson\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Person)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// 该文件用于创建action, 可以有异步和同步, 同步返回的是action对象\n// 异步返回的是一个函数, 函数执行后也必须dispatch(action)\n// 组件中dispatch的是这里, 随后这里返回一个action\n\n/* \r\n  该文件专门为Count组件生成action对象, 它不是action, 是用于创建action\r\n  同步的action在组件中调用这里传递给store, 异步的store执行函数, 并在函数中dispatch一个action对象\r\n*/\n// 引入常量, 常量用于后期维护, 改变常量值即可\nimport { INCREASE, DECREASE } from './constCount';\nexport const creatIncreaseAction = data => ({\n  type: INCREASE,\n  data\n});\nexport const creatDecreaseAction = data => ({\n  type: DECREASE,\n  data\n}); // 异步创建action, 本身创建action就是一个函数, 但是在异步创建需要返回一个函数, 在函数中写异步代码\n// 然而store只认识返回的action,但是这里并没有返回action, 函数它不认识\n// 因此需要借助一个中间件reduc-thunk, 并在createStore时进行操作\n\nexport const createIncrementAsyncAction = data => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch({\n        type: INCREASE,\n        data\n      });\n    }, 500);\n  };\n};","map":{"version":3,"sources":["D:/my/my_web_pro/my_react/redux_/src/redux/countAction.js"],"names":["INCREASE","DECREASE","creatIncreaseAction","data","type","creatDecreaseAction","createIncrementAsyncAction","dispatch","setTimeout"],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;AACA,OAAO,MAAMC,mBAAmB,GAAGC,IAAI,KAAK;AAAEC,EAAAA,IAAI,EAAEJ,QAAR;AAAkBG,EAAAA;AAAlB,CAAL,CAAhC;AACP,OAAO,MAAME,mBAAmB,GAAGF,IAAI,KAAK;AAAEC,EAAAA,IAAI,EAAEH,QAAR;AAAkBE,EAAAA;AAAlB,CAAL,CAAhC,C,CACP;AACA;AACA;;AACA,OAAO,MAAMG,0BAA0B,GAAGH,IAAI,IAAI;AAChD,SAAQI,QAAD,IAAc;AACnBC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAEJ,QAAR;AAAkBG,QAAAA;AAAlB,OAAD,CAAR;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAJD;AAKD,CANM","sourcesContent":["// 该文件用于创建action, 可以有异步和同步, 同步返回的是action对象\r\n// 异步返回的是一个函数, 函数执行后也必须dispatch(action)\r\n// 组件中dispatch的是这里, 随后这里返回一个action\r\n/* \r\n  该文件专门为Count组件生成action对象, 它不是action, 是用于创建action\r\n  同步的action在组件中调用这里传递给store, 异步的store执行函数, 并在函数中dispatch一个action对象\r\n*/\r\n// 引入常量, 常量用于后期维护, 改变常量值即可\r\nimport { INCREASE, DECREASE } from './constCount'\r\nexport const creatIncreaseAction = data => ({ type: INCREASE, data })\r\nexport const creatDecreaseAction = data => ({ type: DECREASE, data })\r\n// 异步创建action, 本身创建action就是一个函数, 但是在异步创建需要返回一个函数, 在函数中写异步代码\r\n// 然而store只认识返回的action,但是这里并没有返回action, 函数它不认识\r\n// 因此需要借助一个中间件reduc-thunk, 并在createStore时进行操作\r\nexport const createIncrementAsyncAction = data => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch({ type: INCREASE, data })\r\n    }, 500)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
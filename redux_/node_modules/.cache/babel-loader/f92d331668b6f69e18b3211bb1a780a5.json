{"ast":null,"code":"var _jsxFileName = \"D:\\\\my\\\\my_web_pro\\\\my_react\\\\redux_\\\\src\\\\containers\\\\countContainer\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { creatIncreaseAction, creatDecreaseAction, createIncrementAsyncAction } from '../../redux/countAction'; // 将ui组件和容器写在一个组件中, 容器放下面, 不用再引入组件, 直接就能\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Count extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.incerate = () => {\n      this.props.increase(1);\n    };\n\n    this.decrease = () => {\n      this.props.decrease(1);\n    };\n\n    this.incerateOdd = () => {\n      const {\n        count\n      } = this.props;\n      if (count % 2 === 0) return;\n      this.props.increase(1);\n    };\n\n    this.incerateAsync = () => {\n      this.props.increaseAsync(1);\n    };\n  }\n\n  render() {\n    const {\n      incerate,\n      decrease,\n      incerateOdd,\n      incerateAsync\n    } = this;\n    const {\n      count\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incerate,\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrease,\n        children: \"-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incerateOdd,\n        children: \"\\u5947\\u6570+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incerateAsync,\n        children: \"\\u5F02\\u6B65+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  count: state\n});\n\nconst mapDispatchToProps = {\n  // 这里也可以返回一个对象, 就是一个映射关系, key的值是一个函数, 这里不进行调用\n  // 因为在action中可以调用, 这里只是将那里定义的函数传递出去\n  // 原来返回函数的形式, 是在回调函数中调用action中的函数, 这里只是传递了函数\n  increase: creatIncreaseAction,\n  decrease: creatDecreaseAction,\n  increaseAsync: createIncrementAsyncAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Count);","map":{"version":3,"sources":["D:/my/my_web_pro/my_react/redux_/src/containers/countContainer/index.jsx"],"names":["React","Component","connect","creatIncreaseAction","creatDecreaseAction","createIncrementAsyncAction","Count","incerate","props","increase","decrease","incerateOdd","count","incerateAsync","increaseAsync","render","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,0BAAnD,QAAqF,yBAArF,C,CAEA;;;;AACA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAC5BM,QAD4B,GACjB,MAAM;AACf,WAAKC,KAAL,CAAWC,QAAX,CAAoB,CAApB;AACD,KAH2B;;AAAA,SAI5BC,QAJ4B,GAIjB,MAAM;AACf,WAAKF,KAAL,CAAWE,QAAX,CAAoB,CAApB;AACD,KAN2B;;AAAA,SAO5BC,WAP4B,GAOd,MAAM;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKJ,KAAvB;AACA,UAAII,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACrB,WAAKJ,KAAL,CAAWC,QAAX,CAAoB,CAApB;AACD,KAX2B;;AAAA,SAY5BI,aAZ4B,GAYZ,MAAM;AACpB,WAAKL,KAAL,CAAWM,aAAX,CAAyB,CAAzB;AACD,KAd2B;AAAA;;AAe5BC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAER,MAAAA,QAAF;AAAYG,MAAAA,QAAZ;AAAsBC,MAAAA,WAAtB;AAAmCE,MAAAA;AAAnC,QAAqD,IAA3D;AACA,UAAM;AAAED,MAAAA;AAAF,QAAY,KAAKJ,KAAvB;AACA,wBACE;AAAA,8BACE;AAAA,kBAAKI;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA3B2B;;AA6B9B,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAAEL,EAAAA,KAAK,EAAEK;AAAT,CAAL,CAA7B;;AACA,MAAMC,kBAAkB,GAAG;AACzB;AACA;AACA;AACAT,EAAAA,QAAQ,EAAEN,mBAJe;AAKzBO,EAAAA,QAAQ,EAAEN,mBALe;AAMzBU,EAAAA,aAAa,EAAET;AANU,CAA3B;AAQA,eAAeH,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { creatIncreaseAction, creatDecreaseAction, createIncrementAsyncAction } from '../../redux/countAction'\r\n\r\n// 将ui组件和容器写在一个组件中, 容器放下面, 不用再引入组件, 直接就能\r\nclass Count extends Component {\r\n  incerate = () => {\r\n    this.props.increase(1)\r\n  }\r\n  decrease = () => {\r\n    this.props.decrease(1)\r\n  }\r\n  incerateOdd = () => {\r\n    const { count } = this.props\r\n    if (count % 2 === 0) return\r\n    this.props.increase(1)\r\n  }\r\n  incerateAsync = () => {\r\n    this.props.increaseAsync(1)\r\n  }\r\n  render () {\r\n    const { incerate, decrease, incerateOdd, incerateAsync } = this\r\n    const { count } = this.props\r\n    return (\r\n      <div>\r\n        <h1>{count}</h1>\r\n        <button onClick={incerate}>+1</button>\r\n        <button onClick={decrease}>-1</button>\r\n        <button onClick={incerateOdd}>奇数+</button>\r\n        <button onClick={incerateAsync}>异步+</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => ({ count: state })\r\nconst mapDispatchToProps = {\r\n  // 这里也可以返回一个对象, 就是一个映射关系, key的值是一个函数, 这里不进行调用\r\n  // 因为在action中可以调用, 这里只是将那里定义的函数传递出去\r\n  // 原来返回函数的形式, 是在回调函数中调用action中的函数, 这里只是传递了函数\r\n  increase: creatIncreaseAction,\r\n  decrease: creatDecreaseAction,\r\n  increaseAsync: createIncrementAsyncAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Count)"]},"metadata":{},"sourceType":"module"}
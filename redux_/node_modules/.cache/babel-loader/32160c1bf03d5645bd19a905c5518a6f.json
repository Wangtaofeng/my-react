{"ast":null,"code":"var _jsxFileName = \"D:\\\\my\\\\my_web_pro\\\\my_react\\\\redux_\\\\src\\\\components\\\\lazyRouter\\\\index.jsx\";\nimport React, { Component, lazy, Suspense } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport MyLink from './MyLink';\nimport './index.css'; // 路由的懒加载, 直接使用下面这种方式的话, 会在一开始不管有没有选中路由组件, 都会进行加载\n// 使用react中的lazy可以实现懒加载, lazy()是个函数, 执行时里面传递一个函数, 需要return一个import()\n// import Hello from './Hello'\n// import World from './World'\n\nconst Hello = /*#__PURE__*/lazy(_c = () => import('./Hello'));\n_c2 = Hello;\nconst World = /*#__PURE__*/lazy(_c3 = () => import('./World')); // 但是这么使用的话, 需要使用一个未加载时的组件来用于加载时的显示\n\n_c4 = World;\nimport moduleName from 'module';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class index extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyLink, {\n        className: \"a\",\n        to: \"/About\",\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(MyLink, {\n        className: \"a\",\n        to: \"/Home\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/About\",\n        component: Hello\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Home\",\n        component: World\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Hello$lazy\");\n$RefreshReg$(_c2, \"Hello\");\n$RefreshReg$(_c3, \"World$lazy\");\n$RefreshReg$(_c4, \"World\");","map":{"version":3,"sources":["D:/my/my_web_pro/my_react/redux_/src/components/lazyRouter/index.jsx"],"names":["React","Component","lazy","Suspense","Route","Redirect","MyLink","Hello","World","moduleName","index","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,aAAP,C,CAEA;AACA;AACA;AACA;;AACA,MAAMC,KAAK,gBAAGL,IAAI,MAAC,MAAM,OAAO,SAAP,CAAP,CAAlB;MAAMK,K;AACN,MAAMC,KAAK,gBAAGN,IAAI,OAAC,MAAM,OAAO,SAAP,CAAP,CAAlB,C,CACA;;MADMM,K;AAEN,OAAOC,UAAP,MAAuB,QAAvB;;AACA,eAAe,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAC3CU,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,GAAlB;AAAsB,QAAA,EAAE,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eACkD;AAAA;AAAA;AAAA;AAAA,cADlD,eAEE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,GAAlB;AAAsB,QAAA,EAAE,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAEJ;AAAhC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAX0C","sourcesContent":["import React, { Component, lazy, Suspense } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport MyLink from './MyLink'\r\nimport './index.css'\r\n\r\n// 路由的懒加载, 直接使用下面这种方式的话, 会在一开始不管有没有选中路由组件, 都会进行加载\r\n// 使用react中的lazy可以实现懒加载, lazy()是个函数, 执行时里面传递一个函数, 需要return一个import()\r\n// import Hello from './Hello'\r\n// import World from './World'\r\nconst Hello = lazy(() => import('./Hello'))\r\nconst World = lazy(() => import('./World'))\r\n// 但是这么使用的话, 需要使用一个未加载时的组件来用于加载时的显示\r\nimport moduleName from 'module'\r\nexport default class index extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <MyLink className=\"a\" to=\"/About\">About</MyLink><br />\r\n        <MyLink className=\"a\" to=\"/Home\">Home</MyLink>\r\n        <Route path=\"/About\" component={Hello} />\r\n        <Route path=\"/Home\" component={World} />\r\n        <Redirect to=\"/About\" />\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
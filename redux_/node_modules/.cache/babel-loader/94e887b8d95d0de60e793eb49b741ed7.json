{"ast":null,"code":"var _jsxFileName = \"D:\\\\my\\\\my_web_pro\\\\my_react\\\\redux_\\\\src\\\\components\\\\pureComponent\\\\index.js\";\nimport React, { pureComponent } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class index extends pureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      num: '111',\n      age: 18\n    };\n\n    this.change = () => {\n      this.setState({\n        num: '222'\n      });\n    };\n  }\n\n  render() {\n    console.log(\"父组件render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.state.car\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.change,\n        children: \"\\u6539\\u53D8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(C, {\n        age: this.state.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass C extends Component {\n  // 上述虽然根据状态前后判断了父组件是否需要调用render, 但是对于子组件来说, 父组件render子组件也会\n  // 有时候虽然父组件更新了, 但是仅仅是因为父组件需要数据更新了, 子组件的并未变化, 那么子组件就不必更新\n  // 因此可以利用同样的方法来判断子组件的props\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.age === this.props.age) return false;\n    return true;\n  }\n\n  render() {\n    console.log('子组件render');\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u6211\\u662F\\u5B50\\u7EC4\\u4EF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/my/my_web_pro/my_react/redux_/src/components/pureComponent/index.js"],"names":["React","pureComponent","index","state","num","age","change","setState","render","console","log","car","C","Component","shouldComponentUpdate","nextProps","nextState","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAEA,eAAe,MAAMC,KAAN,SAAoBD,aAApB,CAAkC;AAAA;AAAA;AAAA,SAC/CE,KAD+C,GACvC;AACNC,MAAAA,GAAG,EAAE,KADC;AAENC,MAAAA,GAAG,EAAE;AAFC,KADuC;;AAAA,SAK/CC,MAL+C,GAKtC,MAAM;AACb,WAAKC,QAAL,CAAc;AAAEH,QAAAA,GAAG,EAAE;AAAP,OAAd;AACD,KAP8C;AAAA;;AAQ/CI,EAAAA,MAAM,GAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,wBACE;AAAA,8BACE;AAAA,kBAAK,KAAKP,KAAL,CAAWQ;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKL,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,CAAD;AAAG,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWE;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAjB8C;;AAmBjD,MAAMO,CAAN,SAAgBC,SAAhB,CAA0B;AACxB;AACA;AACA;AACAC,EAAAA,qBAAqB,CAAEC,SAAF,EAAaC,SAAb,EAAwB;AAC3C,QAAID,SAAS,CAACV,GAAV,KAAkB,KAAKY,KAAL,CAAWZ,GAAjC,EAAsC,OAAO,KAAP;AACtC,WAAO,IAAP;AACD;;AACDG,EAAAA,MAAM,GAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAbuB","sourcesContent":["import React, { pureComponent } from 'react'\r\n\r\nexport default class index extends pureComponent {\r\n  state = {\r\n    num: '111',\r\n    age: 18\r\n  }\r\n  change = () => {\r\n    this.setState({ num: '222' })\r\n  }\r\n  render () {\r\n    console.log(\"父组件render\")\r\n    return (\r\n      <div>\r\n        <h3>{this.state.car}</h3>\r\n        <button onClick={this.change}>改变</button>\r\n        <C age={this.state.age} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nclass C extends Component {\r\n  // 上述虽然根据状态前后判断了父组件是否需要调用render, 但是对于子组件来说, 父组件render子组件也会\r\n  // 有时候虽然父组件更新了, 但是仅仅是因为父组件需要数据更新了, 子组件的并未变化, 那么子组件就不必更新\r\n  // 因此可以利用同样的方法来判断子组件的props\r\n  shouldComponentUpdate (nextProps, nextState) {\r\n    if (nextProps.age === this.props.age) return false\r\n    return true\r\n  }\r\n  render () {\r\n    console.log('子组件render')\r\n    return (\r\n      <h2>我是子组件</h2>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}